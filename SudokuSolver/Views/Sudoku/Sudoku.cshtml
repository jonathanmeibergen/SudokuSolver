@model SudokuSolver.Models.SudokuModel

@{
    ViewBag.Title = "Sudoku Solver";
    Random rnd = new Random();
}

<div class="gameContainer">
    @using (Html.BeginForm("Solve", "Sudoku"))
    {
        <div class="sudokuSidebar">
            <label id="solveLabel">@Model.Alert</label>
            <div class="clearfix"></div>
            <div class="buttonContainer">

                <button type="submit">Solve Logical</button>
                <div class="clearfix"></div>
                <button type="submit" formaction="Sudoku/SolveGuessing">Solve Guessing</button>
                <div class="clearfix"></div>
                <button type="button" onclick="location.href='@Url.Action("CreateSudoku", "Sudoku", rnd)'">Create Random</button>
                <div class="clearfix"></div>

                <div class="slidecontainer">
                    <label>Input Level</label>

                    <div class="slidebar">
                        <input type="range" onchange="ToggleUserControl(this.value)" min="0" max="2" value="0" step="1" class="slider" id="inputslider" />
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="dropdownlistcontainer">
                    @Html.DropDownListFor(model => model.SudokuId, new SelectList(Model.Sudokus, "SudokuId", "Name", Model.SudokuId), null, new { @onchange = "SelectionChanged(this.value)", @onfocus = "console.log('hi')" })
                </div>
                <div class="clearfix"></div>
            </div>
        </div>
        <div class="sudokuMainContainer" id="board">
            <table id="ThickBorder" border="1">
                @for (int i = 0; i < 9; i++)
                {
                    <tr class="sudokuRow">
                        @for (int j = 0; j < 9; j++)
                        {
                            <td>
                                @Html.TextBoxFor(m => m.Cells[i][j], new { @class = "cell", @type = "number", @min = "0", @max = "9", @name = (i.ToString() + j.ToString()), @tag = Model.Cells[i][j], @onchange = "ValidateInput(this)", @readonly = "true" })
                            </td>
                        }
                    </tr>
                }
            </table>
            <p></p>
        </div>
    }
</div>